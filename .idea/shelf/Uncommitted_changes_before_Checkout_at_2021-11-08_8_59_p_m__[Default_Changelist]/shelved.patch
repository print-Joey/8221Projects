Index: A11/src/Piccross/GameView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Piccross;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.Border;\r\nimport javax.swing.border.CompoundBorder;\r\nimport javax.swing.border.EmptyBorder;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\nimport static java.awt.BorderLayout.CENTER;\r\nimport static java.awt.BorderLayout.SOUTH;\r\nimport static javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED;\r\n//Con      Constructor flag Using CTRL + f to locate it\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\npublic class GameView extends JFrame{\r\n    private final String LOGO_PATH          =       \"piccrossNameMin.jpg\";\r\n    private final String POINTS             =       \"Points:  \";\r\n    private final String TIME               =       \"Time:  \";\r\n    private final String RESET              =       \"Reset\";\r\n    private final String FILE_NOT_FOUND     =       \"File not found!!\";\r\n    private final String TITLE              =       \"Piccross\";\r\n    private final int    NUMS_LABEL_OF_TOP_PANEL\r\n                                            =       5;\r\n    private final int    NUMS_LABEL_OF_LEFT_PANEL\r\n                                            =       5;\r\n    private final int    NUM_ROWS           =       5;\r\n    private final int    NUM_COlUMNS        =       5;\r\n    private final String RESOURCE_PATH      =       \"A11\\\\src\\\\Piccross\\\\Resource\\\\\";\r\n\r\n    //================================================================\r\n\r\n    GameView.Controller innerClassControllerObj = new Controller();\r\n    //================================================================\r\n    /* members of initMarkPanel()*/\r\n    JPanel              markPanel;\r\n    JCheckBox           markCheckbox;\r\n    /**\r\n    * The initMarkPanel simply returns a JPanel with the marks\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel initMarkPanel(){\r\n        markPanel           =   new JPanel();\r\n        markCheckbox        =   new JCheckBox(\"Mark\");\r\n\r\n        //attributes\r\n\r\n        markCheckbox.       addActionListener(innerClassControllerObj);\r\n        markCheckbox.       setBackground(new Color(22, 186, 163));\r\n        markCheckbox.       setFont(new Font(\"TimesRoman\", Font.BOLD, 12));\r\n\r\n        markPanel.          setBorder(new EmptyBorder(15,10,10,10));\r\n\r\n        //add\r\n        markPanel.          add(markCheckbox);\r\n\r\n\r\n        return  markPanel;\r\n    }\r\n\r\n\r\n    /* members of initTopPanel()*/\r\n    JPanel                  topMainPanel;\r\n    JLabel[]                labelsOfTopPanel;\r\n    JPanel[]                columnOfLabelPanel;\r\n    //Set the panel which appears on the top\r\n    /**\r\n    * The initTopPanel returns the JPanel which is on the top\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel initTopPanel(){\r\n        topMainPanel            = new JPanel(new GridLayout(1,5));\r\n        labelsOfTopPanel        = new JLabel[NUMS_LABEL_OF_TOP_PANEL];\r\n        columnOfLabelPanel      = new JPanel[NUMS_LABEL_OF_TOP_PANEL];\r\n\r\n\r\n\r\n        // Make it constant for UI now, Will change to variable after implementing logic.\r\n        final String[]  NUMS_DISPLAY_ON_TOP_LABELS = new String[]{\"1\", \"3\", \"4\", \"3\", \"1\"};\r\n        for (int i = 0; i < NUMS_DISPLAY_ON_TOP_LABELS.length; i++) {\r\n            labelsOfTopPanel[i]         = new JLabel(\"(\"+NUMS_DISPLAY_ON_TOP_LABELS[i]+\")\");\r\n            columnOfLabelPanel[i]       = new JPanel();\r\n\r\n            //columnOfLabelPanel[i].setSize(new Dimension(10,10));\r\n            //Set panel attributes\r\n            columnOfLabelPanel[i].          setBackground(new Color(179, 97, 16));\r\n            //Set label attributes\r\n            //labelsOfTopPanel[i].setHorizontalAlignment(SwingConstants.CENTER);\r\n            labelsOfTopPanel[i].            setFont(new Font(\"TimesRoman\", Font.BOLD, 18));\r\n            labelsOfTopPanel[i].            setBorder(new EmptyBorder(10,10,10,10));\r\n            //add up\r\n            columnOfLabelPanel[i].          add(labelsOfTopPanel[i]);\r\n            topMainPanel.                   add(columnOfLabelPanel[i]);\r\n        }\r\n        return topMainPanel;\r\n    }\r\n\r\n\r\n    /* members of initLeftPanel()*/\r\n    JPanel          leftMainPanel;\r\n\r\n    JLabel[]        labelsOfLeftPanel;\r\n    JPanel[]        rowOfLabelPanel;\r\n    //Initiate the panel on the left\r\n    /**\r\n    * The initLeft Panel returns the JPanel on the Left\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel initLeftPanel(){\r\n        leftMainPanel       = new JPanel(new GridLayout(5,1));\r\n        labelsOfLeftPanel   = new JLabel[NUMS_LABEL_OF_LEFT_PANEL];\r\n        rowOfLabelPanel     = new JPanel[NUMS_LABEL_OF_LEFT_PANEL];\r\n        // Make it constant for UI now, Will change to variable after implementing logic.\r\n        final String[] NUMS_DISPLAY_ON_LEFT_LABELS = new String[]{\"1\",\"1\", \"5\", \"3\", \"1,1\"};\r\n\r\n        for (int i = 0; i < NUMS_DISPLAY_ON_LEFT_LABELS.length; i++) {\r\n            labelsOfLeftPanel[i]        = new JLabel(\"(\"+NUMS_DISPLAY_ON_LEFT_LABELS[i]+\")\");\r\n            rowOfLabelPanel[i]          = new JPanel();\r\n\r\n            //Set panel attributes\r\n            rowOfLabelPanel[i].         setBackground(new Color(179, 97, 16));\r\n            rowOfLabelPanel[i].         setBorder(new EmptyBorder(25,0,0,0));\r\n\r\n            //Set label attributes\r\n            labelsOfLeftPanel[i].       setFont(new Font(\"TimesRoman\", Font.BOLD, 18));\r\n\r\n            //add up\r\n            rowOfLabelPanel[i].         add(labelsOfLeftPanel[i]);\r\n            leftMainPanel.              add(rowOfLabelPanel[i]);\r\n        }\r\n        return leftMainPanel;\r\n    }\r\n\r\n    /* members of initBoardPanel()*/\r\n    JPanel                      boardMainPanel;\r\n    JButton[][]                 UnitOfBoardButton;\r\n\r\n    //Set the panel which is used to contain the board\r\n    /**\r\n    * Returns the JPanel which is used to contain the board of the game\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel initBoardPanel(){\r\n        boardMainPanel      =   new JPanel(new GridLayout(5,5,1,1));\r\n\r\n        UnitOfBoardButton   =   new JButton[NUM_ROWS][NUM_COlUMNS];\r\n\r\n        for (int i = 0; i < UnitOfBoardButton.length; i++) {\r\n            for (int j = 0; j < UnitOfBoardButton[i].length; j++) {\r\n                UnitOfBoardButton[i][j] = new JButton();\r\n                UnitOfBoardButton[i][j].setPreferredSize(new Dimension(100,100));\r\n                UnitOfBoardButton[i][j].setBackground(Color.lightGray);\r\n                UnitOfBoardButton[i][j].addActionListener(innerClassControllerObj);\r\n                //add all the buttons to the main panel\r\n                boardMainPanel.         add(UnitOfBoardButton[i][j]);\r\n            }\r\n        }\r\n        Border b1 = BorderFactory.createEmptyBorder(5,5,0,0);\r\n        Border b2 = BorderFactory.createMatteBorder(2,5,5,2,Color.GRAY);\r\n        boardMainPanel.setBorder(new CompoundBorder(b1,b2));\r\n        return boardMainPanel;\r\n    }\r\n\r\n    /* members of initControlPanel()*/\r\n    JPanel      controlMainPanel;    JPanel northPanel,centerPanel,southPanel;\r\n    JPanel      logoPanel;          JLabel logoLabel;\r\n    JPanel      pointsDisplayPanel; JLabel pointsLabel;     JTextField pointsTextField;\r\n    JScrollPane msgDisplayScrollPane; JTextArea messageDisplayTextArea;\r\n    JPanel      timePanel;      JLabel timeLabel;           JTextField timeTextField;\r\n    JButton     resetButton;    JPanel resetPanel;\r\n    //set the panel which is used to control the game\r\n    /**\r\n    * Return the JPanel which is used to control the game\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel initControlPanel() {\r\n        // init all panel in the control panel\r\n        controlMainPanel        =       new JPanel(new BorderLayout());\r\n        northPanel              =       new JPanel(new BorderLayout());\r\n        centerPanel= new JPanel(new BorderLayout());\r\n        southPanel=new JPanel(new BorderLayout());\r\n\r\n        logoPanel               =       new JPanel();\r\n        pointsLabel             =       new JLabel(POINTS);\r\n        pointsDisplayPanel = new JPanel();\r\n\r\n        messageDisplayTextArea  =       new JTextArea();\r\n        msgDisplayScrollPane    =       new JScrollPane();\r\n\r\n\r\n        timePanel               =       new JPanel();\r\n        timeLabel               =       new JLabel(TIME);\r\n        resetButton             =       new JButton(RESET);\r\n        resetPanel              =       new JPanel();\r\n\r\n\r\n\r\n\r\n        //logo panel member and behavior\r\n        try {\r\n\r\n\r\n            //Image Path may different in different IDEs\r\n\r\n            logoLabel           =       new JLabel(new ImageIcon(RESOURCE_PATH + LOGO_PATH));\r\n\r\n        }catch(Exception e){\r\n            System.err.println(FILE_NOT_FOUND);\r\n\r\n        }\r\n        logoPanel.add(logoLabel);\r\n\r\n        //Points panel member and behavior\r\n\r\n        pointsTextField         =       new JTextField(\"0\",5);\r\n        pointsDisplayPanel.     add(pointsLabel);\r\n        pointsDisplayPanel.     add(pointsTextField);\r\n        pointsDisplayPanel.     setBorder(new EmptyBorder(10,0,0,0));\r\n\r\n        //messageDisplayPanel member and behavior\r\n        messageDisplayTextArea.setBackground(new Color(255, 255, 255));\r\n\r\n        msgDisplayScrollPane.setViewportView(messageDisplayTextArea);\r\n\r\n        msgDisplayScrollPane.setVerticalScrollBarPolicy(VERTICAL_SCROLLBAR_AS_NEEDED);\r\n\r\n        \r\n\r\n\r\n\r\n        //timePanel member and behavior\r\n        timeTextField          =       new JTextField(\"0s\",5);\r\n        timePanel.             add(timeLabel);\r\n        timePanel.             add(timeTextField);\r\n\r\n\r\n        //button\r\n        resetButton.            addActionListener(innerClassControllerObj);\r\n        resetPanel.             add(resetButton);\r\n\r\n//layouts\r\n        northPanel.add(logoPanel,BorderLayout.NORTH);\r\n        northPanel.add(pointsDisplayPanel,BorderLayout.CENTER);\r\n        southPanel.add(timePanel,BorderLayout.NORTH);\r\n        southPanel.add(resetPanel,BorderLayout.CENTER);\r\n\r\n        controlMainPanel.       add(northPanel,BorderLayout.NORTH);\r\n        controlMainPanel.       add(msgDisplayScrollPane);\r\n        controlMainPanel.       add(southPanel,BorderLayout.SOUTH);\r\n\r\n\r\n\r\n        controlMainPanel.       setBorder(new EmptyBorder(25,0,0,0));\r\n        return controlMainPanel;\r\n    }\r\n    JPanel          combinedMarkLeftPanel;\r\n    /**\r\n    * Add Left Panel and Mark Panel to the same JPanel and return it\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel addLeftAndMarkPanel(){\r\n        combinedMarkLeftPanel       =       new JPanel(new BorderLayout());\r\n\r\n        combinedMarkLeftPanel.      add(initMarkPanel(),BorderLayout.NORTH);\r\n        combinedMarkLeftPanel.      add(initLeftPanel(),BorderLayout.CENTER);\r\n        return combinedMarkLeftPanel;\r\n    }\r\n\r\n    JPanel combinedTopBoardPanel;\r\n    //combine the top panel and the board panel\r\n    /**\r\n    * Add Top and Board Panel to the same JPanel and return it\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public JPanel addTopAndBoardPanel(){\r\n        combinedTopBoardPanel       =       new JPanel(new BorderLayout());\r\n        \r\n        combinedTopBoardPanel.      add(initTopPanel(),BorderLayout.NORTH);\r\n        combinedTopBoardPanel.      add(initBoardPanel(),BorderLayout.CENTER);\r\n        return combinedTopBoardPanel;\r\n    }\r\n\r\n    //final String RESOURCE_PATH                                  = \"A11\\\\\";\r\n    final String SPLASH_IMAGE_PATH                              = \"piccrossLogo.jpg\";\r\n    //final String FILE_NOT_FOUND                                 = \"File not found!!\";\r\n    final String AUTHOR_SIGNATURE                               = \"Lin,Jiayu/Luo,Chang's Piccross Game Staring....\";\r\n    final String INTERRUPTED_EXCEPTION                          = \"InterruptedException!!\";\r\n    JWindow splashScreenWindow = new JWindow();\r\n\r\n    JPanel windowPanel = new JPanel(new BorderLayout());\r\n    ImageIcon windowImage = new ImageIcon(RESOURCE_PATH + SPLASH_IMAGE_PATH);\r\n    JLabel authorSignatureLabel = new JLabel(AUTHOR_SIGNATURE, JLabel.CENTER);\r\n    public void displaySplashScreen(int time) {\r\n\r\n\r\n        try {\r\n            JLabel windowImageLabel = new JLabel(windowImage);\r\n            //add image to windowPanel\r\n            windowPanel.add(windowImageLabel, CENTER);\r\n        } catch (Exception e) {\r\n            System.err.println(FILE_NOT_FOUND);\r\n        }\r\n\r\n\r\n\r\n        //Customize signature\r\n        authorSignatureLabel.setFont(new Font(Font.SANS_SERIF, Font.ITALIC, 20));\r\n        authorSignatureLabel.setForeground(Color.ORANGE);\r\n        authorSignatureLabel.setBackground(new Color(18,84,8));\r\n        authorSignatureLabel.setOpaque(true);\r\n\r\n\r\n        //set Attributes width/height for Splash\r\n        int width = windowImage.getIconWidth() ;\r\n        int height = windowImage.getIconHeight();\r\n        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();\r\n        int x = (screen.width - width) / 2;\r\n        int y = (screen.height - height) / 2;\r\n\r\n\r\n        //set the location and the size of the window\r\n        splashScreenWindow.pack();\r\n        splashScreenWindow.setBounds(x, y, width, height);\r\n        windowPanel.add(authorSignatureLabel, SOUTH);\r\n        splashScreenWindow.setContentPane(windowPanel);\r\n        splashScreenWindow.setVisible(true);\r\n        try {\r\n            Thread.sleep(time);\r\n            dispose();\r\n        }catch (InterruptedException e) {\r\n            System.err.print(INTERRUPTED_EXCEPTION);\r\n\r\n        }\r\n\r\n    }\r\n    //Con      Constructor flag Using CTRL + f to locate it\r\n    /**\r\n    * Initiate the game GUI\r\n    *\r\n    * @author  Jiayu Lin, Chang Luo\r\n    * @version 1.0\r\n    * @since   2021-09-24\r\n    */\r\n    public GameView() {\r\n\r\n        displaySplashScreen(1000);\r\n\r\n\r\n\r\n\r\n\r\n        EventQueue.invokeLater(new Runnable(){\r\n            @Override\r\n            public void run() {\r\n                JFrame mainFrame = new JFrame();\r\n                JPanel gamePanel = new JPanel(new BorderLayout());\r\n\r\n                //combine all the panels together\r\n                gamePanel.add(addTopAndBoardPanel(), BorderLayout.CENTER);\r\n                gamePanel.add(initControlPanel(), BorderLayout.EAST);\r\n                gamePanel.add(addLeftAndMarkPanel(), BorderLayout.WEST);\r\n\r\n                gamePanel.setVisible(true);\r\n\r\n                //add all the panels to the main frame\r\n                mainFrame.add(gamePanel);\r\n                mainFrame.pack();\r\n\r\n                mainFrame.setVisible(true);\r\n                mainFrame.setResizable(false);\r\n                mainFrame.setTitle(TITLE);\r\n                mainFrame.setBackground(Color.BLACK);\r\n                mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n                //Making the Game window centralized\r\n                int width = mainFrame.getWidth();\r\n                int height = mainFrame.getHeight();\r\n                Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();\r\n                int x = (screen.width - width) / 2;\r\n                int y = (screen.height - height) / 2;\r\n                mainFrame.setBounds(x, y, width, height);\r\n           }\r\n        });\r\n    }\r\n\r\n\r\n\r\n    protected class Controller implements ActionListener {\r\n        int markCheckBoxCount = 0;\r\n        final String RESET_BUTTON_REACTION = \"Reset Button pressed!!\\n\";\r\n        final String UNCHECK_MARK_CHECKBOX_REACTION = \"Check Box \\\"Mark\\\" UnChecked!!\\n\";\r\n        final String CHECK_MARK_CHECKBOX_REACTION = \"Check Box \\\"Mark\\\" Checked!!\\n\";\r\n        final String BLANK_SPACE = \"           \";\r\n        @Override\r\n        public void actionPerformed(ActionEvent e) {\r\n            if (e.getSource() == GameView.this.resetButton) {\r\n                messageDisplayTextArea.append(BLANK_SPACE+RESET_BUTTON_REACTION);\r\n\r\n            } else if (e.getSource() == GameView.this.markCheckbox) {\r\n                if(markCheckBoxCount % 2 !=0){\r\n\r\n                    messageDisplayTextArea.append(BLANK_SPACE+UNCHECK_MARK_CHECKBOX_REACTION);\r\n                }else{\r\n                    messageDisplayTextArea.append(BLANK_SPACE+CHECK_MARK_CHECKBOX_REACTION);\r\n\r\n                }\r\n                markCheckBoxCount++;\r\n            }\r\n\r\n\r\n            for (int i = 0; i < UnitOfBoardButton.length; i++) {\r\n                for (int j = 0; j < UnitOfBoardButton[i].length; j++) {\r\n\r\n                    if(UnitOfBoardButton[i][j].getModel().isArmed()){\r\n                         int row    = i;\r\n                         int column = j;\r\n                         row ++;\r\n                         column++;\r\n                        messageDisplayTextArea.append((BLANK_SPACE+\"Button\"+\"[\"+(row)+\",\"+(column)+\"]\"+\" is Pressed\\n\"));\r\n\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- A11/src/Piccross/GameView.java	(revision 62ab9e06ac630080156286297ad503db7e2b113d)
+++ A11/src/Piccross/GameView.java	(date 1636423136105)
@@ -353,6 +353,8 @@
         splashScreenWindow.setVisible(true);
         try {
             Thread.sleep(time);
+
+            windowPanel.setVisible(false);
             dispose();
         }catch (InterruptedException e) {
             System.err.print(INTERRUPTED_EXCEPTION);
